{"ast":null,"code":"var _jsxFileName = \"/home/julius/Documents/Projects/inventory/src/components/charts/RevenuePlot.js\",\n    _s = $RefreshSig$();\n\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport React, { PureComponent, useEffect, useState } from \"react\";\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { db } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RevenuePlot() {\n  _s();\n\n  const [revenues, setRevenues] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"orders\"), orderBy(\"timestamp\", \"desc\"));\n    onSnapshot(q, snapshot => {\n      setRevenues(snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    });\n  }, []);\n  const data = [{\n    name: \"Jan\",\n    total: 0\n  }, {\n    name: \"Feb\",\n    total: 0\n  }, {\n    name: \"Mar\",\n    total: 0\n  }, {\n    name: \"Apr\",\n    total: 0\n  }, {\n    name: \"May\",\n    total: 0\n  }, {\n    name: \"Jun\",\n    total: 0\n  }, {\n    name: \"Jul\",\n    total: 0\n  }, {\n    name: \"Aug\",\n    total: 0\n  }, {\n    name: \"Sep\",\n    total: 0\n  }, {\n    name: \"Oct\",\n    total: 0\n  }, {\n    name: \"Nov\",\n    total: 0\n  }, {\n    name: \"Dec\",\n    total: 0\n  }];\n\n  const funnel = () => {\n    for (let i = 0; i < 12; i++) {\n      let m = 0;\n      const revenue_data = revenues.filter(revenue => revenue.timestamp.toDate().getMonth() === i);\n      revenue_data.map(data => m += parseInt(data.total));\n      data[i][\"total\"] = m;\n    }\n  };\n\n  funnel();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full xl:w-8/12 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-t mb-0 px-4 py-3 bg-transparent\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative w-full max-w-full flex-grow flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"uppercase text-blueGray-400 mb-1 text-xs font-semibold\",\n                children: \"Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-blueGray-700 text-xl font-semibold\",\n                children: \"Total Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 flex-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            style: {\n              height: \"400px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                width: 800,\n                height: 400,\n                data: data,\n                margin: {\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5\n                },\n                barSize: 20,\n                children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\",\n                  scale: \"point\",\n                  padding: {\n                    left: 10,\n                    right: 10\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"total\",\n                  fill: \"#8884d8\",\n                  background: {\n                    fill: \"#eee\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(RevenuePlot, \"afBAQ9BiVMgzZmkztIXZ8w04tG8=\");\n\n_c = RevenuePlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevenuePlot\");","map":{"version":3,"sources":["/home/julius/Documents/Projects/inventory/src/components/charts/RevenuePlot.js"],"names":["collection","onSnapshot","orderBy","query","React","PureComponent","useEffect","useState","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","db","RevenuePlot","revenues","setRevenues","q","snapshot","docs","map","doc","data","id","name","total","funnel","i","m","revenue_data","filter","revenue","timestamp","toDate","getMonth","parseInt","height","top","right","left","bottom","fill"],"mappings":"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","sourcesContent":["\nimport { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport React, { PureComponent, useEffect, useState } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport { db } from \"../../firebase\";\n\nexport default function RevenuePlot() {\n  const [revenues, setRevenues] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"orders\"), orderBy(\"timestamp\", \"desc\"));\n    onSnapshot(q, (snapshot) => {\n      setRevenues(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n    });\n  }, []);\n  const data = [\n    {\n      name: \"Jan\",\n      total: 0,\n    },\n    {\n      name: \"Feb\",\n      total: 0,\n    },\n    {\n      name: \"Mar\",\n      total: 0,\n    },\n    {\n      name: \"Apr\",\n      total: 0,\n    },\n    {\n      name: \"May\",\n      total: 0,\n    },\n    {\n      name: \"Jun\",\n      total: 0,\n    },\n    {\n      name: \"Jul\",\n      total: 0,\n    },\n    {\n      name: \"Aug\",\n      total: 0,\n    },\n    {\n      name: \"Sep\",\n      total: 0,\n    },\n    {\n      name: \"Oct\",\n      total: 0,\n    },\n    {\n      name: \"Nov\",\n      total: 0,\n    },\n    {\n      name: \"Dec\",\n      total: 0,\n    },\n  ];\n  const funnel = () => {\n    for (let i = 0; i < 12; i++) {\n      let m = 0;\n      const revenue_data = revenues.filter(\n        (revenue) => revenue.timestamp.toDate().getMonth() === i\n      );\n      revenue_data.map((data) => (m += parseInt(data.total)));\n      data[i][\"total\"] = m;\n    }\n  };\n  funnel();\n  return (\n    <>\n      <div className=\"w-full xl:w-8/12 px-4\">\n        <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\n          <div className=\"rounded-t mb-0 px-4 py-3 bg-transparent\">\n            <div className=\"flex flex-wrap items-center\">\n              <div className=\"relative w-full max-w-full flex-grow flex-1\">\n                <h6 className=\"uppercase text-blueGray-400 mb-1 text-xs font-semibold\">\n                  Revenue\n                </h6>\n                <h2 className=\"text-blueGray-700 text-xl font-semibold\">\n                  Total Revenue\n                </h2>\n              </div>\n            </div>\n          </div>\n          <div className=\"p-4 flex-auto\">\n            <div className=\"relative\" style={{ height: \"400px\" }}>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart\n                  width={800}\n                  height={400}\n                  data={data}\n                  margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                  }}\n                  barSize={20}\n                >\n                  <XAxis\n                    dataKey=\"name\"\n                    scale=\"point\"\n                    padding={{ left: 10, right: 10 }}\n                  />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <Bar\n                    dataKey=\"total\"\n                    fill=\"#8884d8\"\n                    background={{ fill: \"#eee\" }}\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}