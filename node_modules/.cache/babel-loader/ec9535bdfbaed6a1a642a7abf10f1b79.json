{"ast":null,"code":"var _jsxFileName = \"/home/julius/Documents/Projects/inventory/src/components/views/AddStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { newStore } from \"../utils\";\nimport { BsDownload, BsPlus, BsX } from \"react-icons/bs\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddStore() {\n  _s();\n\n  var _errors$pers_name, _errors$product_type, _errors$unit, _errors$Time;\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); //to store value from form\n\n  const [purchases, setPurchases] = useState([]); //for set purchase data\n\n  const [unitInput, setUnitInput] = useState(0); //for unit input field\n\n  const [typeInput, setTypeInput] = useState(''); //for type input field\n\n  const [storeStatus, setStoreStatus] = useState(0);\n  const [purchaseStatus, setPurchaseStatus] = useState(0);\n  console.log(storeStatus);\n  useEffect(() => {\n    const q = query(collection(db, \"purchases\"), orderBy(\"timestamp\", \"desc\"));\n    const unsub = onSnapshot(q, snapshot => {\n      setPurchases(snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    });\n    return unsub;\n  }, []); // for store collection\n\n  const [stores, setStores] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"stores\"), orderBy(\"timestamp\", \"desc\"));\n    onSnapshot(q, snapshot => {\n      setStores(snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    });\n  }, []);\n  const y = purchases.filter(purchase => purchase.purchase_name === typeInput);\n  const store_filter = stores.filter(store => store.product_type === typeInput);\n  let storeSum = 0;\n  let sum = 0;\n  const temp = [];\n\n  for (let i = 0; i < y.length; i++) {\n    sum = sum + parseInt(y[i].unit);\n  }\n\n  for (let j = 0; j < store_filter.length; j++) {\n    storeSum = storeSum + parseInt(store_filter[j].unit);\n  }\n\n  temp.push({\n    value: sum,\n    storeValue: storeSum\n  });\n\n  const handleUnitInput = e => {\n    setUnitInput(e.target.value);\n  };\n\n  const handleTypeInput = e => {\n    setTypeInput(e.target.value);\n  };\n\n  const handleStoreStatus = (sum, storeSum) => {};\n\n  handleStoreStatus(sum, storeSum);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-3 \",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-green-800  rounded-md shadow-2xl text-white font-extrabold px-2 py-2 text-2xl\",\n        children: /*#__PURE__*/_jsxDEV(BsDownload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => {\n          setModalIsOpen(true);\n        },\n        className: \"bg-green-800 rounded-md shadow-xl text-white font-extrabold px-2 py-2 text-2xl\",\n        children: /*#__PURE__*/_jsxDEV(BsPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full  lg:w-1/2  mt-10 lg:-mt-20\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(newStore),\n        className: \"lg:w-full  bg-gray-100 p-4 md:p-10 lg:p-10 shadow-2xl rounded-md ml-0 lg:ml-24\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(BsX, {\n            onClick: () => setModalIsOpen(false),\n            className: \"mb-3 text-2xl cursor-pointer font-bold ml-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap -mx-3 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3 mb-6 md:mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n              children: \"Person Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n              id: \"grid-first-name\",\n              type: \"text\",\n              placeholder: \"Person name\",\n              name: \"pers_name\",\n              ref: register({\n                required: \"Person name is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: (_errors$pers_name = errors.pers_name) === null || _errors$pers_name === void 0 ? void 0 : _errors$pers_name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handleTypeInput,\n              className: \"appearance-none lowercase block w-full text-sm  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none bg-white focus:bg-white focus:border-gray-500 \",\n              type: \"text\",\n              placeholder: \"product type\",\n              name: \"product_type\",\n              ref: register({\n                required: \"Type is required\"\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"text-sm\",\n                value: \"\",\n                children: \"Choose\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this), purchases.map(purchase => /*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"lowercase text-sm\",\n                value: purchase.purchase_name,\n                children: purchase.purchase_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 32\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: (_errors$product_type = errors.product_type) === null || _errors$product_type === void 0 ? void 0 : _errors$product_type.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap -mx-3 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n              for: \"grid-last-name\",\n              children: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), temp.map(item => /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleUnitInput,\n              className: \"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n              type: \"number\",\n              placeholder: \"Enter unit\",\n              disabled: item.value - item.storeValue === 0 ? \"disable\" : \" \",\n              name: \"unit\",\n              ref: register({\n                required: \"Unit is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: (_errors$unit = errors.unit) === null || _errors$unit === void 0 ? void 0 : _errors$unit.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 30\n            }, this), temp.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => setStoreStatus(item.value - item.storeValue),\n              className: item.value - item.storeValue >= unitInput || unitInput === 0 ? \"text-transparent text-sm px-3\" : \"text-red-500 text-sm px-3\",\n              children: [\"Out of range, total is \", item.value - item.storeValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 31\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n              for: \"grid-last-name\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n              type: \"date\",\n              placeholder: \"Price\",\n              name: \"Time\",\n              ref: register({\n                required: \"Date is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: (_errors$Time = errors.Time) === null || _errors$Time === void 0 ? void 0 : _errors$Time.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap -mx-3 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3 mb-6 md:mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onClick: () => setModalIsOpen(false),\n              className: \"appearance-none block w-full bg-red-500 text-white font-bold  rounded-md pr-3 py-3 mb-3 leading-tight focus:outline-none\",\n              type: \"button\",\n              value: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"appearance-none block w-full bg-green-500 text-white font-bold rounded-md  pr-3 py-3 leading-tight focus:outline-none  focus:border-gray-500\",\n              id: \"grid-last-name\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddStore, \"lMJEtOMhCrCoajD98PnQ0enxK1w=\", false, function () {\n  return [useForm];\n});\n\n_c = AddStore;\nexport default AddStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStore\");","map":{"version":3,"sources":["/home/julius/Documents/Projects/inventory/src/components/views/AddStore.js"],"names":["React","useState","useEffect","useForm","newStore","BsDownload","BsPlus","BsX","db","collection","onSnapshot","query","orderBy","AddStore","modalIsOpen","setModalIsOpen","register","handleSubmit","formState","errors","purchases","setPurchases","unitInput","setUnitInput","typeInput","setTypeInput","storeStatus","setStoreStatus","purchaseStatus","setPurchaseStatus","console","log","q","unsub","snapshot","docs","map","doc","data","id","stores","setStores","y","filter","purchase","purchase_name","store_filter","store","product_type","storeSum","sum","temp","i","length","parseInt","unit","j","push","value","storeValue","handleUnitInput","e","target","handleTypeInput","handleStoreStatus","required","pers_name","message","item","Time"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { newStore } from \"../utils\"\nimport { \n    BsDownload, BsPlus, BsX } from \"react-icons/bs\";\n   import { db } from \"../../firebase\";\nimport { collection,onSnapshot, query, orderBy } from \"firebase/firestore\";\n\nfunction AddStore() {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const { register, handleSubmit, formState: { errors } } = useForm(); //to store value from form\n    const [ purchases, setPurchases ] = useState([]); //for set purchase data\n    const [ unitInput, setUnitInput ] = useState(0); //for unit input field\n    const [ typeInput, setTypeInput ] = useState(''); //for type input field\n    const [ storeStatus, setStoreStatus ] = useState(0);\n    const [ purchaseStatus, setPurchaseStatus ] = useState(0);\n    console.log(storeStatus);\n    \n    useEffect(() =>{\n      const q = query(collection(db,\"purchases\"),orderBy(\"timestamp\",\"desc\"))\n      const unsub= onSnapshot(q,(snapshot) =>{\n        setPurchases(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id})));\n      });\n      return (unsub) \n    },[]);\n\n    // for store collection\n    const [stores, setStores] = useState([]);\n    useEffect(() =>{\n      const q = query(collection(db, \"stores\"),orderBy(\"timestamp\", \"desc\"))\n        onSnapshot(q,(snapshot) =>{\n        setStores(snapshot.docs.map((doc )=> ({ ...doc.data(), id: doc.id})));\n      });\n    },[]);\n    \n    const y = purchases.filter(purchase=> purchase.purchase_name === typeInput);\n    const store_filter = stores.filter(store=> store.product_type === typeInput);\n    \n    let storeSum = 0;\n    let sum = 0;\n    const temp = []\n    for(let i = 0; i < y.length; i++){\n      sum = sum + parseInt(y[i].unit);\n    }\n   \n    for(let j = 0; j < store_filter.length; j++){\n      storeSum = storeSum + parseInt(store_filter[j].unit);\n     \n    }\n    \n    temp.push({value:sum,storeValue:storeSum});\n    \n    const handleUnitInput = (e) =>{\n      setUnitInput(e.target.value)\n    }\n\n    const handleTypeInput = (e) =>{\n      setTypeInput(e.target.value)\n    }\n\n    const handleStoreStatus = (sum, storeSum) =>{\n      \n\n    }\n    handleStoreStatus(sum, storeSum)\n  \n    return (\n        <>\n            <div className=\"flex space-x-3 \">\n              \n                <span className=\"bg-green-800  rounded-md shadow-2xl text-white font-extrabold px-2 py-2 text-2xl\">\n                <BsDownload />\n                </span>\n                    \n                <span onClick={()=>{setModalIsOpen(true)}} className=\"bg-green-800 rounded-md shadow-xl text-white font-extrabold px-2 py-2 text-2xl\"> \n                <BsPlus />\n                </span>\n            </div>\n              { \n              modalIsOpen && \n              <div  className=\"relative w-full  lg:w-1/2  mt-10 lg:-mt-20\">\n                  <form onSubmit={handleSubmit(newStore)}  className=\"lg:w-full  bg-gray-100 p-4 md:p-10 lg:p-10 shadow-2xl rounded-md ml-0 lg:ml-24\">\n                        <div className=\"\">\n                          \n                            <BsX onClick={()=>setModalIsOpen(false)}  className=\"mb-3 text-2xl cursor-pointer font-bold ml-auto\" />\n                        </div>\n                        <div className=\"flex flex-wrap -mx-3 mb-6\">\n                            <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" >\n                                Person Name\n                              </label>\n                              <input  className=\"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" \n                              id=\"grid-first-name\"\n                               type=\"text\" \n                               placeholder=\"Person name\" \n                               name=\"pers_name\" \n                               ref={register({\n                                 required: \"Person name is required\"\n                               })} \n                               />\n                                <p className=\"text-red-500 text-sm\">{errors.pers_name?.message}</p>\n                            </div>\n\n                            <div className=\"w-full md:w-1/2 px-3\">\n                            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" >\n                                Type\n                            </label>\n                            <select onChange={handleTypeInput}  \n                            className=\"appearance-none lowercase block w-full text-sm  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none bg-white focus:bg-white focus:border-gray-500 \" \n                             type=\"text\" placeholder=\"product type\" name=\"product_type\" \n                            ref={register({\n                              required: \"Type is required\"\n                            })} >\n                            <option className=\"text-sm\" value=\"\">Choose</option>\n                            {purchases.map(purchase=>(\n                               <option className=\"lowercase text-sm\" value={purchase.purchase_name}>{purchase.purchase_name}</option>\n                            ))}\n                            \n                            </select>\n                            <p className=\"text-red-500 text-sm\">{errors.product_type?.message}</p>\n                            </div>\n                       </div>\n\n                    <div className=\"flex flex-wrap -mx-3 mb-6\">\n                    <div className=\"w-full md:w-1/2 px-3\">\n                            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-last-name\">\n                                Unit\n                            </label>\n                            { temp.map( item =>(\n                            <input onChange={handleUnitInput} \n                            className=\"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" \n                            type=\"number\" placeholder=\"Enter unit\" disabled={ item.value - item.storeValue === 0?  \"disable\": \" \" } name=\"unit\"\n                             ref={register({\n                               required: \"Unit is required\"\n                             })} \n                             />\n                             )) }\n                             <p className=\"text-red-500 text-sm\">{errors.unit?.message}</p>\n                            { temp.map(item =>(\n                              <p onClick={()=>setStoreStatus(item.value - item.storeValue)} className={ item.value - item.storeValue >= unitInput || unitInput === 0 ? \"text-transparent text-sm px-3\" : \"text-red-500 text-sm px-3\"}>Out of range, total is {item.value- item.storeValue}</p>\n                            )) }\n                            </div>\n                        <div className=\"w-full md:w-1/2 px-3\">\n                          <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-last-name\">\n                            Time\n                          </label>\n                                <input  className=\"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" \n                                 type=\"date\" placeholder=\"Price\" name=\"Time\" \n                                 ref={register({\n                                   required: \"Date is required\"\n                                 })}\n                                 />\n                                 <p className=\"text-red-500 text-sm\">{errors.Time?.message}</p>\n                        </div>\n                    </div>\n                    \n                        {/* buttons */}\n                    <div className=\"flex flex-wrap -mx-3 mb-6\">\n                      <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                        <input onClick={()=>setModalIsOpen(false)}\n                         className=\"appearance-none block w-full bg-red-500 text-white font-bold  rounded-md pr-3 py-3 mb-3 leading-tight focus:outline-none\"  type=\"button\" value=\"Close\" />\n                      </div>\n                      <div className=\"w-full md:w-1/2 px-3\">\n                        <input type=\"submit\" className=\"appearance-none block w-full bg-green-500 text-white font-bold rounded-md  pr-3 py-3 leading-tight focus:outline-none  focus:border-gray-500\" id=\"grid-last-name\"  value=\"Submit\"  />\n                      </div>\n                    </div>\n                      \n                      \n                  </form>\n               </div>\n              }\n              \n            \n        </>\n    )\n}\n\nexport default AddStore\n"]},"metadata":{},"sourceType":"module"}