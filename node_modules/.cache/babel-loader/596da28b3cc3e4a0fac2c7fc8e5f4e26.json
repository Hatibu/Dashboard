{"ast":null,"code":"import { db } from \"../firebase\";\nimport { doc, deleteDoc, collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nexport const newPurchases = async (data, r) => {\n  const purchase_name = data.p_name.toLowerCase();\n  const unit = data.unit_bought;\n  const description = data.p_descr.toLowerCase();\n  const price = data.price;\n  const paid = data.paid;\n  const purchases_data = {\n    purchase_name,\n    unit,\n    description,\n    price,\n    paid,\n    timestamp: serverTimestamp()\n  };\n  const store_usage = {\n    purchase_name,\n    unit,\n    timestamp: serverTimestamp()\n  };\n\n  try {\n    const collectionRef = collection(db, \"purchases\");\n    await addDoc(collectionRef, purchases_data);\n    alert(\"Registration successfully\");\n    r.target.reset();\n  } catch (err) {\n    console.log(err);\n  }\n\n  try {\n    const collectionRef = collection(db, \"storeUsage\");\n    await addDoc(collectionRef, store_usage);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const handlePurchasesDelete = async id => {\n  const docRef = doc(db, \"purchases\", id);\n  const r = window.confirm(\"Press a button!\");\n\n  if (r === true) {\n    await deleteDoc(docRef);\n  }\n}; // logics for store operations\n\nexport const newStore = async (data, r) => {\n  const pers_name = data.pers_name.toLowerCase();\n  const product_type = data.product_type.toLowerCase();\n  const quantity = data.quantity;\n  const Time = data.Time;\n  const store_data = {\n    pers_name,\n    product_type,\n    quantity,\n    Time,\n    timestamp: serverTimestamp()\n  };\n\n  try {\n    console.log(store_data);\n    const collectionRef = collection(db, \"stores\");\n    await addDoc(collectionRef, store_data);\n    alert(\"Registration successfully\");\n    r.target.reset();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const handleStoreDelete = async id => {\n  const docRef = doc(db, \"stores\", id);\n  const r = window.confirm(\"Press a button!\");\n\n  if (r === true) {\n    await deleteDoc(docRef);\n  }\n};","map":{"version":3,"sources":["/home/julius/Documents/Projects/inventory/src/components/utils.js"],"names":["db","doc","deleteDoc","collection","addDoc","serverTimestamp","newPurchases","data","r","purchase_name","p_name","toLowerCase","unit","unit_bought","description","p_descr","price","paid","purchases_data","timestamp","store_usage","collectionRef","alert","target","reset","err","console","log","handlePurchasesDelete","id","docRef","window","confirm","newStore","pers_name","product_type","quantity","Time","store_data","handleStoreDelete"],"mappings":"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","sourcesContent":["import {db } from \"../firebase\";\nimport { doc, deleteDoc, collection,addDoc, serverTimestamp } from \"firebase/firestore\";\n\nexport const newPurchases = async (data, r) =>{\n    const purchase_name = data.p_name.toLowerCase();\n    const unit = data.unit_bought;\n    const description = data.p_descr.toLowerCase();\n    const price = data.price;\n    const paid = data.paid;\n    const purchases_data = {purchase_name, unit, description, price, paid, timestamp: serverTimestamp()}\n    const store_usage = {purchase_name,unit, timestamp: serverTimestamp()}\n  \n    try{\n     const collectionRef = collection(db, \"purchases\");\n     await addDoc(collectionRef, purchases_data);\n     alert(\"Registration successfully\");\n     r.target.reset();\n    }catch(err){\n      console.log(err);\n    }\n   try{\n    const collectionRef = collection(db, \"storeUsage\");\n    await addDoc(collectionRef, store_usage);\n   }catch(err){\n    console.log(err);\n   }\n \n  };\n\nexport const handlePurchasesDelete = async (id) =>{\n    const docRef = doc(db, \"purchases\", id);\n    const r = window.confirm(\"Press a button!\");\n    if (r === true){\n      await deleteDoc(docRef);\n    }\n   \n\n}\n\n// logics for store operations\nexport const newStore = async (data,r) =>{\n    const pers_name= data.pers_name.toLowerCase();\n    const product_type = data.product_type.toLowerCase();\n    const quantity = data.quantity;\n    const Time = data.Time;\n    const store_data = { pers_name, product_type, quantity, Time, timestamp: serverTimestamp()}\n    \n  try{\n    console.log(store_data)\n    const collectionRef = collection(db, \"stores\");\n    await addDoc(collectionRef, store_data);\n    alert(\"Registration successfully\");\n    r.target.reset();\n   }catch(err){\n     console.log(err);\n   }\n\n};\n\nexport const handleStoreDelete = async (id) =>{\n  const docRef = doc(db, \"stores\", id);\n  const r = window.confirm(\"Press a button!\");\n  if (r === true){\n    await deleteDoc(docRef);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}