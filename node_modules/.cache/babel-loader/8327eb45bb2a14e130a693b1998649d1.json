{"ast":null,"code":"var _jsxFileName = \"/home/julius/Documents/Projects/inventory/src/components/charts/LinePlot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LinePlot() {\n  _s();\n\n  const [purchases, setPurchases] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"purchases\"), orderBy(\"timestamp\", \"desc\"));\n    onSnapshot(q, snapshot => {\n      setPurchases(snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    });\n  }, []);\n  let nov = 0;\n  const purchase_data = purchases.filter(purchase => purchase.timestamp.toDate().getMonth() === 10 ? nov = +purchase.price : 0 + nov);\n  console.log(purchase_data);\n  const data = [{\n    name: 'Jan',\n    pv: 2400,\n    amt: 2400\n  }, {\n    name: 'Feb',\n    pv: 1398,\n    amt: 2210\n  }, {\n    name: 'Mar',\n    pv: 9800,\n    amt: 2290\n  }, {\n    name: 'Apr',\n    pv: 3908,\n    amt: 2000\n  }, {\n    name: 'May',\n    pv: 4800,\n    amt: 2181\n  }, {\n    name: 'Jun',\n    pv: 3800,\n    amt: 2500\n  }, {\n    name: 'Jul',\n    pv: 4300,\n    amt: 2100\n  }, {\n    name: 'Aug',\n    pv: 3800,\n    amt: 2500\n  }, {\n    name: 'Sep',\n    pv: 9800,\n    amt: 2290\n  }, {\n    name: 'Oct',\n    pv: 4800,\n    amt: 2181\n  }, {\n    name: 'Nov',\n    pv: 4800,\n    amt: 2181\n  }, {\n    name: 'Dec',\n    pv: 3800,\n    amt: 2500\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-blueGray-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-t mb-0 px-4 py-3 bg-white\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap items-center \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative  w-full max-w-full flex-grow flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"uppercase text-white mb-1 text-xs font-semibold\",\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-gray-500 text-xl font-semibold\",\n                children: \"Purchases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 flex-auto bg-white\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            style: {\n              height: \"350px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                width: 500,\n                height: 300,\n                data: data,\n                margin: {\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"pv\",\n                  stroke: \"#8884d8\",\n                  activeDot: {\n                    r: 8\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LinePlot, \"fFvUZx3YJr820b/Jxu32TKRTfG8=\");\n\n_c = LinePlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinePlot\");","map":{"version":3,"sources":["/home/julius/Documents/Projects/inventory/src/components/charts/LinePlot.js"],"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","db","collection","onSnapshot","query","orderBy","LinePlot","purchases","setPurchases","q","snapshot","docs","map","doc","data","id","nov","purchase_data","filter","purchase","timestamp","toDate","getMonth","price","console","log","name","pv","amt","height","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport {db} from \"../../firebase\"\nimport { collection,onSnapshot, query, orderBy } from \"firebase/firestore\";\n\nexport default function LinePlot() {\n\n  const [ purchases, setPurchases ] = useState([]);\n  useEffect(() =>{\n    const q = query(collection(db,\"purchases\"),orderBy(\"timestamp\",\"desc\"))\n    onSnapshot(q,(snapshot) =>{\n      setPurchases(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id})));\n    });\n  },[]);\nlet nov = 0\n  const purchase_data = purchases.filter(purchase=> purchase.timestamp.toDate().getMonth()=== 10? nov=+purchase.price :0+nov)\n  console.log(purchase_data)\n    const data = [\n      {\n        name: 'Jan',\n        pv: 2400,\n        amt: 2400,\n      },\n      {\n        name: 'Feb',\n        pv: 1398,\n        amt: 2210,\n      },\n      {\n        name: 'Mar',\n        pv: 9800,\n        amt: 2290,\n      },\n      {\n        name: 'Apr',\n        pv: 3908,\n        amt: 2000,\n      },\n      {\n        name: 'May',\n        pv: 4800,\n        amt: 2181,\n      },\n      {\n        name: 'Jun',\n        pv: 3800,\n        amt: 2500,\n      },\n      {\n        name: 'Jul',\n        pv: 4300,\n        amt: 2100,\n      },\n      {\n        name: 'Aug',\n        pv: 3800,\n        amt: 2500,\n      },\n      {\n        name: 'Sep',\n        pv: 9800,\n        amt: 2290,\n      },\n      {\n        name: 'Oct',\n        pv: 4800,\n        amt: 2181,\n      },\n      {\n        name: 'Nov',\n        pv: 4800,\n        amt: 2181,\n      },\n      {\n        name: 'Dec',\n        pv: 3800,\n        amt: 2500,\n      },\n    ];\n \n  return (\n    <>\n      <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\">\n        <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-blueGray-800\">\n          <div className=\"rounded-t mb-0 px-4 py-3 bg-white\">\n            <div className=\"flex flex-wrap items-center \">\n              <div className=\"relative  w-full max-w-full flex-grow flex-1\">\n                <h6 className=\"uppercase text-white mb-1 text-xs font-semibold\">\n                  Overview\n                </h6>\n                <h2 className=\"text-gray-500 text-xl font-semibold\">\n                 Purchases\n                </h2>\n              </div>\n            </div>\n          </div>\n          <div className=\"p-4 flex-auto bg-white\">\n            {/* Chart */}\n            <div className=\"relative\" style={{ height: \"350px\" }}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n          \n        </LineChart>\n      </ResponsiveContainer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}