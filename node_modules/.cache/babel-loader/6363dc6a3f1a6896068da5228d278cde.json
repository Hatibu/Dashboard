{"ast":null,"code":"var _jsxFileName = \"/home/julius/Documents/Projects/inventory/src/components/charts/LinePlot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LinePlot() {\n  _s();\n\n  const [purchases, setPurchases] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"purchases\"), orderBy(\"timestamp\", \"desc\"));\n    onSnapshot(q, snapshot => {\n      setPurchases(snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    });\n  }, []);\n  const data = [{\n    name: \"Jan\",\n    total: 0\n  }, {\n    name: \"Feb\",\n    total: 0\n  }, {\n    name: \"Mar\",\n    total: 0\n  }, {\n    name: \"Apr\",\n    total: 0\n  }, {\n    name: \"May\",\n    total: 0\n  }, {\n    name: \"Jun\",\n    total: 0\n  }, {\n    name: \"Jul\",\n    total: 0\n  }, {\n    name: \"Aug\",\n    total: 0\n  }, {\n    name: \"Sep\",\n    total: 0\n  }, {\n    name: \"Oct\",\n    total: 0\n  }, {\n    name: \"Nov\",\n    total: 0\n  }, {\n    name: \"Dec\",\n    total: 0\n  }];\n\n  const funnel = () => {\n    for (let i = 0; i < 12; i++) {\n      let m = 0;\n      const purchase_data = purchases.filter(purchase => purchase.timestamp.toDate().getMonth() === i);\n      purchase_data.map(data => m += parseInt(data.price));\n      data[i][\"total\"] = m;\n    }\n  };\n\n  funnel();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-blueGray-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-t mb-0 px-4 py-3 bg-white\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap items-center \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative  w-full max-w-full flex-grow flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"uppercase text-white mb-1 text-xs font-semibold\",\n                children: \"Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-gray-500 text-xl font-semibold\",\n                children: \"Purchases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 flex-auto bg-white\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            style: {\n              height: \"350px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                width: 500,\n                height: 300,\n                data: data,\n                margin: {\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"total\",\n                  stroke: \"#8884d8\",\n                  activeDot: {\n                    r: 8\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LinePlot, \"UTsywvh8Fy6d3lHuJ+5M5yc5e9c=\");\n\n_c = LinePlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinePlot\");","map":{"version":3,"sources":["/home/julius/Documents/Projects/inventory/src/components/charts/LinePlot.js"],"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","db","collection","onSnapshot","query","orderBy","LinePlot","purchases","setPurchases","q","snapshot","docs","map","doc","data","id","name","total","funnel","i","m","purchase_data","filter","purchase","timestamp","toDate","getMonth","parseInt","price","height","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\nexport default function LinePlot() {\n  const [purchases, setPurchases] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"purchases\"), orderBy(\"timestamp\", \"desc\"));\n    onSnapshot(q, (snapshot) => {\n      setPurchases(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n    });\n  }, []);\n\n  const data = [\n    {\n      name: \"Jan\",\n      total: 0,\n    },\n    {\n      name: \"Feb\",\n      total: 0,\n    },\n    {\n      name: \"Mar\",\n      total: 0,\n    },\n    {\n      name: \"Apr\",\n      total: 0,\n    },\n    {\n      name: \"May\",\n      total: 0,\n    },\n    {\n      name: \"Jun\",\n      total: 0,\n    },\n    {\n      name: \"Jul\",\n      total: 0,\n    },\n    {\n      name: \"Aug\",\n      total: 0,\n    },\n    {\n      name: \"Sep\",\n      total: 0,\n    },\n    {\n      name: \"Oct\",\n      total: 0,\n    },\n    {\n      name: \"Nov\",\n      total: 0,\n    },\n    {\n      name: \"Dec\",\n      total: 0,\n    },\n  ];\n\n  const funnel = () => {\n    for (let i = 0; i < 12; i++) {\n      let m = 0;\n      const purchase_data = purchases.filter(\n        (purchase) => purchase.timestamp.toDate().getMonth() === i\n      );\n      purchase_data.map((data) => (m += parseInt(data.price)));\n      data[i][\"total\"] = m;\n    }\n  };\n  funnel();\n\n\n  return (\n    <>\n      <div className=\"w-full xl:w-8/12 mb-12 xl:mb-0 px-4\">\n        <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-blueGray-800\">\n          <div className=\"rounded-t mb-0 px-4 py-3 bg-white\">\n            <div className=\"flex flex-wrap items-center \">\n              <div className=\"relative  w-full max-w-full flex-grow flex-1\">\n                <h6 className=\"uppercase text-white mb-1 text-xs font-semibold\">\n                  Overview\n                </h6>\n                <h2 className=\"text-gray-500 text-xl font-semibold\">\n                  Purchases\n                </h2>\n              </div>\n            </div>\n          </div>\n          <div className=\"p-4 flex-auto bg-white\">\n\n            {/* Chart */}\n            <div className=\"relative\" style={{ height: \"350px\" }}>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                  width={500}\n                  height={300}\n                  data={data}\n                  margin={{\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"total\"\n                    stroke=\"#8884d8\"\n                    activeDot={{ r: 8 }}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}