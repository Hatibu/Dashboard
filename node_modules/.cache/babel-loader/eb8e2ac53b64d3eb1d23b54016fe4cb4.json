{"ast":null,"code":"var _jsxFileName = \"/home/julius/Documents/Projects/inventory/src/components/views/UpdateStore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { newStore } from \"../utils\";\nimport { BsX } from \"react-icons/bs\";\nimport { db } from \"../../firebase\";\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UpdateStore(_ref) {\n  _s();\n\n  var _errors$pers_name, _errors$product_type, _errors$unit, _errors$Time;\n\n  let {\n    setModalIsOpen,\n    editStore\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); //to store value from form\n\n  const [purchases, setPurchases] = useState([]); //for set purchase data\n\n  const [unitInput, setUnitInput] = useState(0); //for unit input field\n\n  const [typeInput, setTypeInput] = useState(''); //for type input field\n\n  useEffect(() => {\n    const q = query(collection(db, \"purchases\"), orderBy(\"timestamp\", \"desc\"));\n    const unsub = onSnapshot(q, snapshot => {\n      setPurchases(snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    });\n    return unsub;\n  }, []); // for store collection\n\n  const [stores, setStores] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"stores\"), orderBy(\"timestamp\", \"desc\"));\n    onSnapshot(q, snapshot => {\n      setStores(snapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    });\n  }, []);\n  const y = purchases.filter(purchase => purchase.purchase_name === typeInput);\n  const store_filter = stores.filter(store => store.product_type === typeInput);\n  let storeSum = 0;\n  let sum = 0;\n  const temp = [];\n\n  for (let i = 0; i < y.length; i++) {\n    sum = sum + parseInt(y[i].unit);\n  }\n\n  for (let j = 0; j < store_filter.length; j++) {\n    storeSum = storeSum + parseInt(store_filter[j].unit);\n  }\n\n  temp.push({\n    value: sum,\n    storeValue: storeSum\n  });\n\n  const handleUnitInput = e => {\n    setUnitInput(e.target.value);\n  };\n\n  const handleTypeInput = e => {\n    setTypeInput(e.target.value);\n  };\n\n  const handleUpdate = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full lg:w-1/2 -ml-24 lg:ml-48 -mt-96 relative\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(newStore),\n        className: \"lg:w-full  bg-gray-100 p-4 md:p-10 lg:p-10 shadow-2xl rounded-md ml-0 lg:ml-24\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(BsX, {\n            onClick: () => setModalIsOpen(false),\n            className: \"mb-3 text-2xl cursor-pointer font-bold ml-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap -mx-3 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3 mb-6 md:mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n              children: \"Person Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n              id: \"grid-first-name\",\n              type: \"text\",\n              placeholder: \"Person name\",\n              name: \"pers_name\",\n              defaultValue: editStore[1],\n              ref: register({\n                required: \"Person name is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: (_errors$pers_name = errors.pers_name) === null || _errors$pers_name === void 0 ? void 0 : _errors$pers_name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handleTypeInput,\n              className: \"appearance-none lowercase block w-full text-sm  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none bg-white focus:bg-white focus:border-gray-500 \",\n              type: \"text\",\n              placeholder: \"product type\",\n              name: \"product_type\",\n              ref: register({\n                required: \"Type is required\"\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"text-sm\",\n                value: \"\",\n                children: \"Choose\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this), purchases.map(purchase => /*#__PURE__*/_jsxDEV(\"option\", {\n                className: \"lowercase text-sm\",\n                value: purchase.purchase_name,\n                children: purchase.purchase_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 32\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: (_errors$product_type = errors.product_type) === null || _errors$product_type === void 0 ? void 0 : _errors$product_type.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap -mx-3 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n              for: \"grid-last-name\",\n              children: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), temp.map(item => /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleUnitInput,\n              className: item.value - item.storeValue === 0 ? \"hidden appearance-none  w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" : \"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n              type: \"number\",\n              placeholder: item.value - item.storeValue === 0 ? \"purchases is 0\" : \"Enter unit\",\n              name: \"unit\",\n              defaultValue: editStore[3],\n              ref: register({\n                required: \"Unit is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: (_errors$unit = errors.unit) === null || _errors$unit === void 0 ? void 0 : _errors$unit.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 30\n            }, this), temp.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: item.value - item.storeValue >= unitInput || unitInput === 0 ? \"text-transparent text-sm px-3\" : \"text-red-500 text-sm px-3\",\n              children: [\"Out of range, total is \", item.value - item.storeValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 31\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n              for: \"grid-last-name\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n              type: \"date\",\n              placeholder: \"Price\",\n              name: \"Time\",\n              defaultValue: editStore[4],\n              ref: register({\n                required: \"Date is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm\",\n              children: (_errors$Time = errors.Time) === null || _errors$Time === void 0 ? void 0 : _errors$Time.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap -mx-3 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3 mb-6 md:mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onClick: () => setModalIsOpen(false),\n              className: \"appearance-none block w-full bg-red-500 text-white font-bold  rounded-md pr-3 py-3 mb-3 leading-tight focus:outline-none\",\n              type: \"button\",\n              value: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full md:w-1/2 px-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"appearance-none block w-full bg-green-500 text-white font-bold rounded-md  pr-3 py-3 leading-tight focus:outline-none  focus:border-gray-500\",\n              id: \"grid-last-name\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n}\n\n_s(UpdateStore, \"Y+xZq0VXnrwaD8crYThQQCrsKME=\", false, function () {\n  return [useForm];\n});\n\n_c = UpdateStore;\nexport default UpdateStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateStore\");","map":{"version":3,"sources":["/home/julius/Documents/Projects/inventory/src/components/views/UpdateStore.js"],"names":["React","useState","useEffect","useForm","newStore","BsX","db","collection","onSnapshot","query","orderBy","UpdateStore","setModalIsOpen","editStore","register","handleSubmit","formState","errors","purchases","setPurchases","unitInput","setUnitInput","typeInput","setTypeInput","q","unsub","snapshot","docs","map","doc","data","id","stores","setStores","y","filter","purchase","purchase_name","store_filter","store","product_type","storeSum","sum","temp","i","length","parseInt","unit","j","push","value","storeValue","handleUnitInput","e","target","handleTypeInput","handleUpdate","required","pers_name","message","item","Time"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { newStore } from \"../utils\"\nimport { BsX } from \"react-icons/bs\";\n   import { db } from \"../../firebase\";\nimport { collection,onSnapshot, query, orderBy } from \"firebase/firestore\";\n\nfunction UpdateStore({ setModalIsOpen, editStore}) {\n    \n    const { register, handleSubmit, formState: { errors } } = useForm(); //to store value from form\n    const [ purchases, setPurchases ] = useState([]); //for set purchase data\n    const [ unitInput, setUnitInput ] = useState(0); //for unit input field\n    const [ typeInput, setTypeInput ] = useState(''); //for type input field\n  \n    useEffect(() =>{\n      const q = query(collection(db,\"purchases\"),orderBy(\"timestamp\",\"desc\"))\n      const unsub= onSnapshot(q,(snapshot) =>{\n        setPurchases(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id})));\n      });\n      return (unsub) \n    },[]);\n\n    // for store collection\n    const [stores, setStores] = useState([]);\n    useEffect(() =>{\n      const q = query(collection(db, \"stores\"),orderBy(\"timestamp\", \"desc\"))\n        onSnapshot(q,(snapshot) =>{\n        setStores(snapshot.docs.map((doc )=> ({ ...doc.data(), id: doc.id})));\n      });\n    },[]);\n    \n    const y = purchases.filter(purchase=> purchase.purchase_name === typeInput);\n    const store_filter = stores.filter(store=> store.product_type === typeInput);\n    \n    let storeSum = 0;\n    let sum = 0;\n    const temp = []\n    for(let i = 0; i < y.length; i++){\n      sum = sum + parseInt(y[i].unit);\n    }\n   \n    for(let j = 0; j < store_filter.length; j++){\n      storeSum = storeSum + parseInt(store_filter[j].unit);\n     \n    }\n    \n    temp.push({value:sum,storeValue:storeSum});\n    \n    const handleUnitInput = (e) =>{\n      setUnitInput(e.target.value)\n    }\n\n    const handleTypeInput = (e) =>{\n      setTypeInput(e.target.value)\n    }\n\n    const handleUpdate = () =>{\n\n    }\n\n   \n  \n    return (\n        <>\n           \n             \n              <div  className=\"w-full lg:w-1/2 -ml-24 lg:ml-48 -mt-96 relative\">\n                  <form onSubmit={handleSubmit(newStore)}  className=\"lg:w-full  bg-gray-100 p-4 md:p-10 lg:p-10 shadow-2xl rounded-md ml-0 lg:ml-24\">\n                        <div className=\"\">\n                          \n                            <BsX onClick={()=>setModalIsOpen(false)}  className=\"mb-3 text-2xl cursor-pointer font-bold ml-auto\" />\n                        </div>\n                        <div className=\"flex flex-wrap -mx-3 mb-6\">\n                            <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                              <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" >\n                                Person Name\n                              </label>\n                              <input  className=\"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" \n                              id=\"grid-first-name\"\n                               type=\"text\" \n                               placeholder=\"Person name\" \n                               name=\"pers_name\" \n                               defaultValue={editStore[1]}\n                               ref={register({\n                                 required: \"Person name is required\"\n                               })} \n                               />\n                                <p className=\"text-red-500 text-sm\">{errors.pers_name?.message}</p>\n                            </div>\n\n                            <div className=\"w-full md:w-1/2 px-3\">\n                            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" >\n                                Type\n                            </label>\n                            <select onChange={handleTypeInput}  \n                            className=\"appearance-none lowercase block w-full text-sm  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none bg-white focus:bg-white focus:border-gray-500 \" \n                             type=\"text\" placeholder=\"product type\" name=\"product_type\" \n                            ref={register({\n                              required: \"Type is required\"\n                            })} >\n                            <option className=\"text-sm\" value=\"\">Choose</option>\n                            {purchases.map(purchase=>(\n                               <option className=\"lowercase text-sm\" value={purchase.purchase_name}>{purchase.purchase_name}</option>\n                            ))}\n                            \n                            </select>\n                            <p className=\"text-red-500 text-sm\">{errors.product_type?.message}</p>\n                            </div>\n                       </div>\n\n                    <div className=\"flex flex-wrap -mx-3 mb-6\">\n                    <div className=\"w-full md:w-1/2 px-3\">\n                            <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-last-name\">\n                                Unit\n                            </label>\n                            { temp.map( item =>(\n                            <input onChange={handleUnitInput} \n                            className={ item.value - item.storeValue === 0?\n                              \"hidden appearance-none  w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" \n                              :\n                              \"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none  pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                            } \n                            type=\"number\" \n                            placeholder={item.value - item.storeValue === 0? \"purchases is 0\" : \"Enter unit\" } \n                             name=\"unit\"\n                             defaultValue={editStore[3]}\n                             ref={register({\n                               required: \"Unit is required\"\n                             })} \n                             />\n                             )) }\n                             <p className=\"text-red-500 text-sm\">{errors.unit?.message}</p>\n                            { temp.map(item =>(\n                              <p  className={ item.value - item.storeValue >= unitInput || unitInput === 0 ? \"text-transparent text-sm px-3\" : \"text-red-500 text-sm px-3\"}>Out of range, total is {item.value- item.storeValue}</p>\n                            )) }\n                            </div>\n                        <div className=\"w-full md:w-1/2 px-3\">\n                          <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-last-name\">\n                            Time\n                          </label>\n                                <input  className=\"appearance-none block w-full  text-gray-700 rounded-lg border-2 border-gray-200 outline-none pl-4 pr-3 py-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" \n                                 type=\"date\" \n                                 placeholder=\"Price\"\n                                 name=\"Time\" \n                                 defaultValue={editStore[4]}\n                                 ref={register({\n                                   required: \"Date is required\"\n                                 })}\n                                 />\n                                 <p className=\"text-red-500 text-sm\">{errors.Time?.message}</p>\n                        </div>\n                    </div>\n                    \n                        {/* buttons */}\n                    <div className=\"flex flex-wrap -mx-3 mb-6\">\n                      <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                        <input onClick={()=>setModalIsOpen(false)}\n                         className=\"appearance-none block w-full bg-red-500 text-white font-bold  rounded-md pr-3 py-3 mb-3 leading-tight focus:outline-none\"  type=\"button\" value=\"Close\" />\n                      </div>\n                      <div className=\"w-full md:w-1/2 px-3\">\n                        <input type=\"submit\" className=\"appearance-none block w-full bg-green-500 text-white font-bold rounded-md  pr-3 py-3 leading-tight focus:outline-none  focus:border-gray-500\" id=\"grid-last-name\"  value=\"Submit\"  />\n                      </div>\n                    </div>\n                      \n                      \n                  </form>\n               </div>\n              \n              \n            \n        </>\n    )\n}\n\nexport default UpdateStore\n"]},"metadata":{},"sourceType":"module"}